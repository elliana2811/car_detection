name: Airflow CI/CD on Self-Hosted Runner

on:
  push:
    branches:
      - ci-cd-test 

env:
  # THAY THẾ BẰNG TÊN IMAGE VÀ DOCKER COMPOSE FILE CỦA BẠN
  IMAGE_NAME: elliana2811/car_detection
  DOCKER_COMPOSE_FILE: docker-compose.prod.yml # Tên file docker-compose trong repo

jobs:
  build-and-push-image:
    name: Build and Push Airflow Docker Image
    runs-on: ubuntu-latest # <<---- THAY ĐỔI Ở ĐÂY
    # ... (phần còn lại của job build-and-push-image giữ nguyên) ...
    outputs:
      image_tag_sha: ${{ steps.meta.outputs.version }} 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # Cân nhắc nâng cấp lên v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2 # Cân nhắc nâng cấp lên v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=,suffix=,format=short 
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          context: ./data_pipeline/flow 
          file: ./data_pipeline/flow/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha 
          cache-to: type=gha,mode=max 

  deploy-airflow:
    name: Deploy Airflow Services
    runs-on: self-hosted 
    needs: build-and-push-image 
    
    steps:
      - name: Checkout Repository (để có docker-compose.yaml)
        uses: actions/checkout@v4

      - name: Create .env file from GitHub Secret
        # Gán secret vào một biến môi trường cho step này
        env:
          SECRET_CONTENT_EXISTS: ${{ secrets.ENV_FILE_CONTENT }}
        # Kiểm tra biến môi trường đó
        if: ${{ env.SECRET_CONTENT_EXISTS }} 
        run: |
          Write-Host "Attempting to create .env file from secret..."
          # Sử dụng here-string (@" "@) để đảm bảo nội dung được ghi nguyên bản
          # và sử dụng biến môi trường $env:ENV_CONTENT
          @"
          ${{ env.ENV_CONTENT }}
          "@ | Set-Content -Path ".env" -NoNewline -Encoding UTF8
          Write-Host ".env file created successfully from secret."
        shell: powershell 

      # Bước này để xác minh rằng file .env đã được tạo thành công
      - name: Verify .env file existence
        run: |
          $envFilePath = ".env"
          if (-not (Test-Path $envFilePath -PathType Leaf)) { 
            Write-Error "ERROR: .env file was NOT found at '$($envFilePath)' in the checkout directory (current directory: $(Get-Location))."
            Write-Host "This could be because the 'ENV_FILE_CONTENT' secret is not set or the file was not created correctly."
            exit 1
          } else {
            Write-Host ".env file verified successfully at '$($envFilePath)'."
          }
        shell: powershell

      # ... các steps còn lại ...